//-----------------------------------------------------------------------------
// File: CPKCore readme.txt
// Desc: game resource package system readme
// Time: 2003-1-2
// Auth: CTCRST
// Ver : 1.0
//
// Copyright (c) 2003 Softstar Entertainment All rights reserved.
//-----------------------------------------------------------------------------
<<CPK 打包文件格式以及管理工具、程序接口说明>>

设计目标：
1、快速
2、兼容多种压缩方法
3、方便地添加删除单个文件、目录
4、可以管理多个包

主要设计思想：
01、用表项来记录单个文件的信息，用CRC标志来区分文件；
02、CRC是按照文件的全名(即包括完整路径)计算的；
03、将简单文件名(不包括路径)以及ExtraInfo保存在各文件具体信息之后；
04、一开始就分配一些表项，添加文件时就可以不需要移动所有文件信息；
05、表项用完之后再分配一定量表项；
06、删除文件时只将表项标记为无效；
07、添加文件时，寻找空闲表项以及空闲文件空间插入，如果没有合适的空闲
	文件空间，则添加到包文件末尾；
08、在项目进行到一定阶段时，可以对包进行一次碎片整理，可以排除掉由于
	经常添加、删除、修改文件造成的空间碎片，而且还可以对表项进行一次
	排序整理，以便加快文件查找速度；
09、采用过滤器的思想，压缩、解压、加密、解密、凡是文件格式的转换都可
	以看作是过滤，只要有通用的接口，就可以与很多种压缩方式兼容；
10、可以将JPG、TGA -> DXT 的图像格式转换做成一种过滤器，这样的话，使
	用者不需要将图片转成DXT，直接打包就行，游戏就可以直接使用压缩纹
	理格式。
11、如果从包里错删文件，还可以尝试进行恢复
12、对于大于8MB的文件，因为其一般都是动画或音乐，所以不采用任何压缩方
	式，直接存在包中。


CPK文件格式：
//----------------------------------------
// CPK 文件头  (struct tagCPKHeader)
//----------------------------------------
// Table 项 0  (struct tagCPKTable)
//----------------------------------------
// Table 项 1
//----------------------------------------
// Table 项 2
//----------------------------------------
// Table 项 3
//----------------------------------------
// . . .
//----------------------------------------
// . . .
//----------------------------------------
// 第一个文件内容(压缩或非压缩)
// 简单文件名(不包括目录)
// 附加信息 - ExtraInfo
//----------------------------------------
// 第二个文件内容(压缩或非压缩)
// 简单文件名(不包括目录)
// 附加信息 - ExtraInfo
//----------------------------------------
// 可能为小段空闲空间
//----------------------------------------
// 第三个文件内容(压缩或非压缩)
// 简单文件名(不包括目录)
// 附加信息 - ExtraInfo
//----------------------------------------
// . . .
//----------------------------------------


// CPK文件头结构
struct tagCPKHeader
{
	DWORD	dwLable;		// 文件类型标志(为0x1A545352)
	DWORD	dwVersion;		// 版本号
	DWORD	dwTableStart;	// 文件表起始字节
	DWORD	dwBlockStart;	// 数据块起始地址
	DWORD	dwMaxTableNum;	// 最大文件存放个数
	DWORD	dwFileNum;		// 当前文件个数	
	DWORD	dwReserved[32];	// 保留
};


// CPK文件表结构
struct tagCPKTable
{
	DWORD	dwCRC;				// CRC较验
	DWORD	dwFlag;				// 标志
	DWORD	dwFatherCRC;		// 父目录CRC
	DWORD	dwStartPos;			// 开始位置
	DWORD	dwPackedSize;		// 压缩后长度
	DWORD	dwOriginSize;		// 原文件长度
	DWORD	dwExtraInfoSize;	// 附加信息长度
};


// tagCPKTable 中的 dwFlag 标志说明:
// 0000 0000-0000 0000-0000 0000-0000 0001 (0x0001)此文件有效
// 0000 0000-0000 0000-0000 0000-0000 0011 (0x0002)此为目录且有效
// 0000 0000-0000 0000-1000 0000-0000 0000 (0x8000)CRC有重复
// 高十六位为过滤器编号


// 除文件本体、文件名外的文件附加信息
struct tagFileExtraInfo
{
	FILETIME	CreateTime;			// 建立时间
	FILETIME	LastAccessTime;		// 最后的访问时间
	FILETIME	LastWriteTime;		// 最后的修改时间
	FILETIME	AddToPackageTime;	// 加入包的时间
	FILETIME	DelFromPackageTime;	// 从包中删去的时间
	DWORD		dwReserved[4];		// 保留
};




主要参考：
Blizzard MPQ文件格式
Scott Blias <<It's still loading>>



