//-----------------------------------------------------------------------------
//!\file world_mgr.h
//!\author Aslan
//!
//!\date 2009-06-11
//! last 2009-06-11
//!
//!\brief 游戏世界管理器
//!
//!	Copyright (c) 2004 TENGWU Entertainment All rights reserved.
//-----------------------------------------------------------------------------
#pragma once

class World;
class BillEvent;

//-----------------------------------------------------------------------------
// 游戏世界管理器
//-----------------------------------------------------------------------------
class WorldMgr
{
public:
	//-------------------------------------------------------------------------
	// CONSTRUCT
	//-------------------------------------------------------------------------
	WorldMgr() : m_Trunk(this), m_nPort(0)	{}
	~WorldMgr()	{}

	//-------------------------------------------------------------------------
	// 初始化，更新及销毁
	//-------------------------------------------------------------------------
	BOOL	Init();
	VOID	Update();
	VOID	Destroy();

	//-------------------------------------------------------------------------
	// 消息相关
	//-------------------------------------------------------------------------
	LPBYTE	RecvMsg(DWORD dwWorldID, DWORD& dwMsgSize, INT& nUnRecved)	{ return m_pTrans->Recv(dwWorldID, dwMsgSize, nUnRecved); }
	VOID	ReturnMsg(DWORD dwWorldID, LPBYTE pMsg)						{ m_pTrans->FreeRecved(dwWorldID, pMsg); }
	VOID	SendMsg(DWORD dwWorldID, LPVOID pMsg, DWORD dwSize)			{ m_pTrans->Send(dwWorldID, pMsg, dwSize); }
	VOID	HandleCmd(LPVOID pMsg, DWORD dwSize, World* pWorld)			{ m_pCmdMgr->HandleCmd((tagNetCmd*)pMsg, dwSize, (DWORD)pWorld); }

	//-------------------------------------------------------------------------
	// 游戏世界相关
	//-------------------------------------------------------------------------
	World*	GetWorld(DWORD dwWorldID)									{ return m_mapWorld.Peek(dwWorldID); }

	//-------------------------------------------------------------------------
	// 得到world的运行时信息
	//-------------------------------------------------------------------------
	VOID	DisPlayerRunTimeInfo(TObjRef<Console>& pConsole);

private:
	//-------------------------------------------------------------------------
	// 消息注册与反注册
	//-------------------------------------------------------------------------
	VOID	RegisterWorldCmd();
	VOID	UnregisterWorldCmd();

	//-------------------------------------------------------------------------
	// 网络回调函数
	//-------------------------------------------------------------------------
	DWORD	LoginCallBack(LPVOID, LPVOID);			// 服务器连接回调函数
	DWORD	LogoutCallBack(LPVOID);					// 服务器连接断开回调函数

	//-------------------------------------------------------------------------
	// 消息处理函数
	//-------------------------------------------------------------------------
	DWORD	HandleWorldLogin(tagNetCmd* pCmd, World* pWorld);

private:
	TSFPTrunk<WorldMgr>		m_Trunk;
	TObjRef<Util>			m_pUtil;

	//-------------------------------------------------------------------------
	// 网络连接
	//-------------------------------------------------------------------------
	TObjRef<StreamServer>	m_pTrans;		// 连接
	INT						m_nPort;		// 端口

	//-------------------------------------------------------------------------
	// 消息管理器
	//-------------------------------------------------------------------------
	TObjRef<NetCmdMgr>		m_pCmdMgr;		// 消息管理器

	//-------------------------------------------------------------------------
	// 游戏世界列表
	//-------------------------------------------------------------------------
	TMap<DWORD, World*>		m_mapWorld;		// 游戏世界列表
};

//-----------------------------------------------------------------------------
// 全局变量
//-----------------------------------------------------------------------------
extern WorldMgr g_WorldMgr;