//-------------------------------------------------------------------------------------------------------
// Copyright (c) 2004 TENGWU Entertainment All rights reserved.
// filename: pet.h
// author: xlguo
// actor:
// data: 2009-07-13
// last:
// brief: 宠物实体
//-------------------------------------------------------------------------------------------------------
#pragma once

#include "creature.h"

class PetSoul;
class PetTracker;
class Role;

//----------------------------------------------------------------------------------------------------
// 宠物实体
//----------------------------------------------------------------------------------------------------
class Pet : public Creature
{
public:
	//----------------------------------------------------------------------------------------------------
	// 与PetSoul整合部分
	//----------------------------------------------------------------------------------------------------
	BOOL			IntegrateSoul(PetSoul* pSoul);
	VOID			DetachSoul();

	//----------------------------------------------------------------------------------------------------
	// 继承自Creature部分
	//----------------------------------------------------------------------------------------------------
	virtual VOID	Update();
	virtual VOID	OnAttChange(INT nIndex);
	virtual DWORD	GetTypeID();

	//----------------------------------------------------------------------------------------------------
	// 创建与删除
	//----------------------------------------------------------------------------------------------------
	static Pet*		Create(DWORD dwPetID, PetSoul* pSoul);
	static VOID		Delete(Pet* pToDel);
	
	//----------------------------------------------------------------------------------------------------
	// 对外接口
	//----------------------------------------------------------------------------------------------------
	BYTE			GetPetState();
	Role*			GetMaster();
	PetSoul*		GetSoul() const { return m_pSoul; }
	VOID			Follow(Unit* pTarget);
	VOID			Teleport(Unit* pTarget);

private:
	//----------------------------------------------------------------------------------------------------
	// 构造与析构
	//----------------------------------------------------------------------------------------------------
	Pet(DWORD dwID, DWORD dwMapID,  DWORD dwMasterID, Vector3& vPos, Vector3& vFace, PetSoul* pSoul);
	~Pet();
	BOOL			Init(Role* pMaster );

private:
	PetSoul*		m_pSoul;			// 宠物灵魂
	PetTracker*		m_pTracker;			// 跟踪器
	EPetModelType	m_ModelType;		// 宠物模型

};
